{"version":3,"sources":["App.module.scss","components/Recipe/Recipe.module.scss","components/Navbar/Navbar.js","components/hoc/Layout.js","components/RecipeList/RecipeList.js","redux.js","localStorage.js","types.js","components/Recipe/Recipe.js","pages/Home/Home.js","pages/UpdateRecipe/UpdateRecipe.js","pages/AddRecipe/AddRecipe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","to","Layout","props","className","children","RecipeList","recipes","useSelector","state","map","recipe","key","id","title","initialState","uuidv4","ingredients","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","type","payload","filter","window","__REDUX_DEVTOOLS_EXTENSION__","devToolsExtension","subscribe","stringify","setItem","console","log","saveState","getState","Recipe","dispatch","useDispatch","classes","recipeTitle","onClick","Home","item","index","UpdateRecipe","match","params","AddRecipe","useState","setRecipe","inputHandler","e","value","target","name","uuid4","onSubmit","preventDefault","addRecipeAction","onChange","App","main","mainContainer","exact","path","component","Boolean","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f0eea526.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__30-qZ\",\"mainContainer\":\"App_mainContainer__1uPjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"Recipe_recipe__3eCuI\",\"recipeTitle\":\"Recipe_recipeTitle__1cuQl\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to=\"/add\">Go to add page</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/\">Go to home page</NavLink> \r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/edit/3\">Go to update page</NavLink>    \r\n                </li> \r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div className={props.className}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst RecipeList = () => {\r\n    const recipes = useSelector(state => state.recipes)\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {recipes.map((recipe) => <li key={recipe.id}>{recipe.title}</li>)}\r\n            </ul>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeList;\r\n","import { createStore } from 'redux'\r\nimport { loadState, saveState } from './localStorage'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport {\r\n    ADD_RECIPE,\r\n    UPDATE_RECIPE,\r\n    DELETE_RECIPE, \r\n    DELETE_ALL\r\n} from './types'\r\n\r\n\r\nconst initialState = {\r\n    recipes: [\r\n        {\r\n            id: uuidv4(),\r\n            title: 'Roast Beef',\r\n            ingredients: '-roast\\n-beef'\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            title: 'Fries tomato',\r\n            ingredients: '-tomato\\n-fries'\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            title: 'Rasdgsadgsdgef',\r\n            ingredients: '-roast\\n-beef'\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            title: 'Friasdfasdfgmato',\r\n            ingredients: '-tomafasdfo\\n-fries'\r\n        }\r\n    ]\r\n}\r\n\r\nconst persistedState = loadState()\r\n\r\nexport const store = createStore(\r\n    recipeReducer,\r\n    persistedState || initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.devToolsExtension()\r\n);\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState())\r\n});\r\n\r\nfunction recipeReducer(state, { type, payload }) {\r\n    switch(type) {\r\n        case ADD_RECIPE:\r\n            return {\r\n                ...state,\r\n                recipes: [...state.recipes, payload]\r\n            }\r\n        case UPDATE_RECIPE: \r\n            return {\r\n                ...state,\r\n                recipes: state.recipes.map(recipe => (recipe.id === payload) ? \r\n                    {...recipe, title: payload.title, ingredients: payload.ingredients} : \r\n                    recipe\r\n                )\r\n            }\r\n        case DELETE_RECIPE:\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes.filter(recipe => (recipe.id !== payload))\r\n            }\r\n        case DELETE_ALL:\r\n            return {\r\n                ...state,\r\n                recipes: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n} \r\n\r\n\r\nexport const addRecipeAction = ( recipe ) => ({\r\n    type: ADD_RECIPE,\r\n    payload: recipe\r\n})\r\n\r\nexport const updateRecipeAction = ( id_recipe ) => ({\r\n    type: UPDATE_RECIPE,\r\n    payload: id_recipe\r\n})\r\n\r\nexport const deleteRecipeAction = ( id_recipe ) => ({\r\n    type: DELETE_RECIPE,\r\n    payload: id_recipe\r\n})\r\n\r\nexport const deleteAllAction = () => ({\r\n    type: DELETE_ALL\r\n})\r\n\r\n","export const loadState = () => {\r\n    try{\r\n        const serializedState = localStorage.getItem('state')\r\n        if(serializedState === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState)\r\n    } catch(err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n}","export const ADD_RECIPE = 'ADD_RECIPE'\r\nexport const UPDATE_RECIPE = 'UPDATE_RECIPE'\r\nexport const DELETE_RECIPE = 'DELETE_RECIPE'\r\nexport const DELETE_ALL = 'DELETE_ALL'","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { deleteRecipeAction } from '../../redux'\r\nimport classes from './Recipe.module.scss'\r\n\r\n\r\nconst Recipe = ({ recipe }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={classes.recipe}>\r\n            <div className={classes.recipeTitle}>\r\n                <h2>{recipe.title}</h2>\r\n                <div className=\"btn-group\">\r\n                    <Link to={`/edit/${recipe.id}`} >Редактировать</Link>\r\n                    <button onClick={() => dispatch(deleteRecipeAction(recipe.id))}>Remove</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"recipe-ingredients\">\r\n                <h3>Ingredients:</h3>\r\n                <p>{recipe.ingredients}</p>\r\n            </div>\r\n \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport Recipe from '../../components/Recipe/Recipe'\r\n\r\nconst Home = () => {\r\n    const recipes = useSelector(state => state.recipes)\r\n\r\n    return (\r\n        <div className=\"recipes\">\r\n            {recipes.map((item, index) => <Recipe recipe={item} key={item.id}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst UpdateRecipe = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Welcome to updating page id = {props.match.params.id} </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateRecipe;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuid4 } from 'uuid'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addRecipeAction } from '../../redux'\r\n\r\n\r\nconst AddRecipe = () => {\r\n    const [recipe, setRecipe] = useState({ id: '', title: '', ingredients: '' })\r\n    const dispatch = useDispatch()\r\n\r\n    const inputHandler = e => {\r\n        const value = e.target.value\r\n        const name = e.target.name\r\n        if(!recipe.id)\r\n            setRecipe(state => ({...state, id: uuid4()}))\r\n        setRecipe(state => ({...state, [name]: value}))\r\n    }\r\n\r\n    const addRecipe = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addRecipeAction(recipe))\r\n        setRecipe({ id: '', title: '', ingredients: '' })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={addRecipe}>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    onChange={inputHandler}\r\n                    value={recipe.title}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"ingredients\"\r\n                    onChange={inputHandler}\r\n                    value={recipe.ingredients}\r\n                />\r\n                <button type=\"submit\">Check</button>\r\n                <button>Provetir</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddRecipe;\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport classes from './App.module.scss'\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Layout from './components/hoc/Layout';\r\nimport RecipeList from './components/RecipeList/RecipeList'\r\nimport Home from './pages/Home/Home';\r\nimport UpdateRecipe from './pages/UpdateRecipe/UpdateRecipe';\r\nimport AddRecipe from './pages/AddRecipe/AddRecipe';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <aside>\r\n        <Navbar />\r\n        <RecipeList />\r\n      </aside>\r\n      <Layout className={classes.mainContainer}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route exact path=\"/add\" component={AddRecipe} />\r\n          <Route exact path=\"/edit/:id\" component={UpdateRecipe}/>\r\n        </Switch>\r\n      </Layout>\r\n      <p >To top</p>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}